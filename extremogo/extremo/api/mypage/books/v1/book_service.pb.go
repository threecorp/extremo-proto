//
// README: https://cloud.google.com/apis/design/standard_methods
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: extremo/api/mypage/books/v1/book_service.proto

package books

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v1 "github.com/threecorp/extremo-proto/extremogo/extremo/msg/db/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListBooksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Behaves as like GraphQL Field Selector
	// google.protobuf.FieldMask field_mask = 1999;
	//
	// Tenant FK
	TenantFk int32 `protobuf:"varint,1,opt,name=tenant_fk,json=tenantFk,proto3" json:"tenant_fk,omitempty"`
	// page number
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// The maximum number of items to return.
	PageSize      int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBooksRequest) Reset() {
	*x = ListBooksRequest{}
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBooksRequest) ProtoMessage() {}

func (x *ListBooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBooksRequest.ProtoReflect.Descriptor instead.
func (*ListBooksRequest) Descriptor() ([]byte, []int) {
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListBooksRequest) GetTenantFk() int32 {
	if x != nil {
		return x.TenantFk
	}
	return 0
}

func (x *ListBooksRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListBooksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListBooksResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// article msg.db
	Elements []*v1.Book `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	// Total Size
	TotalSize     int32 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBooksResponse) Reset() {
	*x = ListBooksResponse{}
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBooksResponse) ProtoMessage() {}

func (x *ListBooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBooksResponse.ProtoReflect.Descriptor instead.
func (*ListBooksResponse) Descriptor() ([]byte, []int) {
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListBooksResponse) GetElements() []*v1.Book {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *ListBooksResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type FilterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Behaves as like GraphQL Field Selector
	// google.protobuf.FieldMask field_mask = 1999;
	//
	// Tenant FK
	TenantFk      int32 `protobuf:"varint,1,opt,name=tenant_fk,json=tenantFk,proto3" json:"tenant_fk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterRequest) Reset() {
	*x = FilterRequest{}
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterRequest) ProtoMessage() {}

func (x *FilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterRequest.ProtoReflect.Descriptor instead.
func (*FilterRequest) Descriptor() ([]byte, []int) {
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP(), []int{2}
}

func (x *FilterRequest) GetTenantFk() int32 {
	if x != nil {
		return x.TenantFk
	}
	return 0
}

type FilterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// article msg.db
	Elements      []*v1.Book `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterResponse) Reset() {
	*x = FilterResponse{}
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterResponse) ProtoMessage() {}

func (x *FilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterResponse.ProtoReflect.Descriptor instead.
func (*FilterResponse) Descriptor() ([]byte, []int) {
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP(), []int{3}
}

func (x *FilterResponse) GetElements() []*v1.Book {
	if x != nil {
		return x.Elements
	}
	return nil
}

type ListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Behaves as like GraphQL Field Selector
	// google.protobuf.FieldMask field_mask = 1999;
	//
	// Tenant FK
	TenantFk int32 `protobuf:"varint,1,opt,name=tenant_fk,json=tenantFk,proto3" json:"tenant_fk,omitempty"`
	// page number
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// The maximum number of items to return.
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OpenedAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=opened_at,json=openedAt,proto3" json:"opened_at,omitempty"`
	ClosedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListRequest) GetTenantFk() int32 {
	if x != nil {
		return x.TenantFk
	}
	return 0
}

func (x *ListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRequest) GetOpenedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenedAt
	}
	return nil
}

func (x *ListRequest) GetClosedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ClosedAt
	}
	return nil
}

type ListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// article msg.db
	Elements []*v1.Book `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	// Total Size
	TotalSize     int32 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListResponse) GetElements() []*v1.Book {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *ListResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type GetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Behaves as like GraphQL Field Selector
	// google.protobuf.FieldMask field_mask = 1999;
	//
	// Tenant FK
	TenantFk int32 `protobuf:"varint,1,opt,name=tenant_fk,json=tenantFk,proto3" json:"tenant_fk,omitempty"`
	// Relation Key
	Pk            int32 `protobuf:"varint,2,opt,name=pk,proto3" json:"pk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetRequest) GetTenantFk() int32 {
	if x != nil {
		return x.TenantFk
	}
	return 0
}

func (x *GetRequest) GetPk() int32 {
	if x != nil {
		return x.Pk
	}
	return 0
}

type GetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A book book. if request book is not published, it filtered them. so response might be empty.
	Element       *v1.Book `protobuf:"bytes,1,opt,name=element,proto3" json:"element,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetResponse) GetElement() *v1.Book {
	if x != nil {
		return x.Element
	}
	return nil
}

// PrimaryKey is set by JWT Token
type CreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Tenant FK
	TenantFk int32 `protobuf:"varint,1,opt,name=tenant_fk,json=tenantFk,proto3" json:"tenant_fk,omitempty"`
	// name of book
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// description of book
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// start
	OpenedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=opened_at,json=openedAt,proto3" json:"opened_at,omitempty"`
	// until
	ClosedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
	// Relation Keys: users.id for CLIENT
	ClientFks []int32 `protobuf:"varint,6,rep,packed,name=client_fks,json=clientFks,proto3" json:"client_fks,omitempty"`
	// Relation Keys
	TeamFks []int32 `protobuf:"varint,7,rep,packed,name=team_fks,json=teamFks,proto3" json:"team_fks,omitempty"`
	// Relation Keys
	ServiceFks    []int32 `protobuf:"varint,8,rep,packed,name=service_fks,json=serviceFks,proto3" json:"service_fks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP(), []int{8}
}

func (x *CreateRequest) GetTenantFk() int32 {
	if x != nil {
		return x.TenantFk
	}
	return 0
}

func (x *CreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateRequest) GetOpenedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenedAt
	}
	return nil
}

func (x *CreateRequest) GetClosedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ClosedAt
	}
	return nil
}

func (x *CreateRequest) GetClientFks() []int32 {
	if x != nil {
		return x.ClientFks
	}
	return nil
}

func (x *CreateRequest) GetTeamFks() []int32 {
	if x != nil {
		return x.TeamFks
	}
	return nil
}

func (x *CreateRequest) GetServiceFks() []int32 {
	if x != nil {
		return x.ServiceFks
	}
	return nil
}

type CreateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A book book. if request book is not published, it filtered them. so response might be empty.
	Element       *v1.Book `protobuf:"bytes,1,opt,name=element,proto3" json:"element,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP(), []int{9}
}

func (x *CreateResponse) GetElement() *v1.Book {
	if x != nil {
		return x.Element
	}
	return nil
}

type UpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Tenant FK
	TenantFk int32 `protobuf:"varint,1,opt,name=tenant_fk,json=tenantFk,proto3" json:"tenant_fk,omitempty"`
	// PK
	Pk int32 `protobuf:"varint,2,opt,name=pk,proto3" json:"pk,omitempty"`
	// name of book
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// description of book
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	// status filter which allows NONE
	Status v1.BookEnum_Status `protobuf:"varint,5,opt,name=status,proto3,enum=extremo.msg.db.v1.BookEnum_Status" json:"status,omitempty"`
	// start
	OpenedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=opened_at,json=openedAt,proto3" json:"opened_at,omitempty"`
	// until
	ClosedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
	// Relation Keys: users.id for CLIENT
	ClientFks []int32 `protobuf:"varint,8,rep,packed,name=client_fks,json=clientFks,proto3" json:"client_fks,omitempty"`
	// Relation Key
	TeamFks []int32 `protobuf:"varint,9,rep,packed,name=team_fks,json=teamFks,proto3" json:"team_fks,omitempty"`
	// Relation Key
	ServiceFks    []int32 `protobuf:"varint,10,rep,packed,name=service_fks,json=serviceFks,proto3" json:"service_fks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateRequest) GetTenantFk() int32 {
	if x != nil {
		return x.TenantFk
	}
	return 0
}

func (x *UpdateRequest) GetPk() int32 {
	if x != nil {
		return x.Pk
	}
	return 0
}

func (x *UpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateRequest) GetStatus() v1.BookEnum_Status {
	if x != nil {
		return x.Status
	}
	return v1.BookEnum_Status(0)
}

func (x *UpdateRequest) GetOpenedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenedAt
	}
	return nil
}

func (x *UpdateRequest) GetClosedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ClosedAt
	}
	return nil
}

func (x *UpdateRequest) GetClientFks() []int32 {
	if x != nil {
		return x.ClientFks
	}
	return nil
}

func (x *UpdateRequest) GetTeamFks() []int32 {
	if x != nil {
		return x.TeamFks
	}
	return nil
}

func (x *UpdateRequest) GetServiceFks() []int32 {
	if x != nil {
		return x.ServiceFks
	}
	return nil
}

type UpdateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A book message. if request book is not published, it filtered them. so response might be empty.
	Element       *v1.Book `protobuf:"bytes,1,opt,name=element,proto3" json:"element,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateResponse) GetElement() *v1.Book {
	if x != nil {
		return x.Element
	}
	return nil
}

type DeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Tenant FK
	TenantFk int32 `protobuf:"varint,1,opt,name=tenant_fk,json=tenantFk,proto3" json:"tenant_fk,omitempty"`
	// Primary Key is confirmed by JWT Token
	Pk            int32 `protobuf:"varint,2,opt,name=pk,proto3" json:"pk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extremo_api_mypage_books_v1_book_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteRequest) GetTenantFk() int32 {
	if x != nil {
		return x.TenantFk
	}
	return 0
}

func (x *DeleteRequest) GetPk() int32 {
	if x != nil {
		return x.Pk
	}
	return 0
}

var File_extremo_api_mypage_books_v1_book_service_proto protoreflect.FileDescriptor

var file_extremo_api_mypage_books_v1_book_service_proto_rawDesc = string([]byte{
	0x0a, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x79,
	0x70, 0x61, 0x67, 0x65, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1b, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x79,
	0x70, 0x61, 0x67, 0x65, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x65,
	0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x64, 0x62, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x65, 0x78, 0x74, 0x72, 0x65,
	0x6d, 0x6f, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x66, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x46, 0x6b, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x64, 0x20,
	0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x7c, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x92, 0x01, 0x04, 0x08, 0x00, 0x10, 0x64, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x26, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x35, 0x0a, 0x0d, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x66, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x46, 0x6b,
	0x22, 0x51, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x00, 0x10, 0x64, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0xfe, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x66, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x46, 0x6b, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04,
	0x18, 0x64, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x41,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x77, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x42,
	0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x00, 0x10, 0x64, 0x52, 0x08, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x28, 0x00, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4b, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x66, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x46,
	0x6b, 0x12, 0x17, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x70, 0x6b, 0x22, 0x4a, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x74,
	0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x86, 0x03, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x66, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x46, 0x6b, 0x12, 0x1e,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x00, 0x18, 0xff, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x00, 0x18, 0xff, 0x01, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x41,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x66,
	0x6b, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x92, 0x01, 0x08,
	0x08, 0x01, 0x22, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x46, 0x6b, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x66, 0x6b, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x92, 0x01, 0x08, 0x08, 0x01, 0x22,
	0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x46, 0x6b, 0x73, 0x12, 0x2f,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x6b, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x05, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x92, 0x01, 0x08, 0x08, 0x01, 0x22, 0x04, 0x1a,
	0x02, 0x20, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x6b, 0x73, 0x22,
	0x4d, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xe5,
	0x03, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x66, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x46, 0x6b, 0x12, 0x17, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x70, 0x6b, 0x12,
	0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x00, 0x18, 0xff, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x00, 0x18, 0xff, 0x01, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x64, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x20, 0x00, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08,
	0x01, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2d, 0x0a, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x42,
	0x0e, 0xfa, 0x42, 0x0b, 0x92, 0x01, 0x08, 0x08, 0x01, 0x22, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x6b, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x66, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0e, 0xfa, 0x42,
	0x0b, 0x92, 0x01, 0x08, 0x08, 0x01, 0x22, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x74, 0x65,
	0x61, 0x6d, 0x46, 0x6b, 0x73, 0x12, 0x2f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x66, 0x6b, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x92,
	0x01, 0x08, 0x08, 0x01, 0x22, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x46, 0x6b, 0x73, 0x22, 0x4d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x74, 0x72,
	0x65, 0x6d, 0x6f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f,
	0x6f, 0x6b, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x66, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x20, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x46, 0x6b, 0x12, 0x17, 0x0a, 0x02,
	0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20,
	0x00, 0x52, 0x02, 0x70, 0x6b, 0x32, 0xd8, 0x06, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x2a, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x79,
	0x70, 0x61, 0x67, 0x65, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x25, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x79, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x5f, 0x66, 0x6b, 0x7d, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x7b, 0x70,
	0x6b, 0x7d, 0x12, 0x87, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x27, 0x2e, 0x65, 0x78, 0x74,
	0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x79, 0x70, 0x61, 0x67, 0x65, 0x2e,
	0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x79, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x79, 0x70, 0x61,
	0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x66, 0x6b,
	0x7d, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x7b, 0x70, 0x6b, 0x7d, 0x12, 0x92, 0x01, 0x0a,
	0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x79, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x62, 0x6f, 0x6f,
	0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x79, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x79, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x66, 0x6b, 0x7d, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x85, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x65, 0x78, 0x74,
	0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x79, 0x70, 0x61, 0x67, 0x65, 0x2e,
	0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x79, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x79,
	0x70, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x66, 0x6b, 0x7d, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x93, 0x01, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x79, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x79, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x1a, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x79, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x66, 0x6b, 0x7d, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x7b, 0x70, 0x6b, 0x7d, 0x12,
	0x8e, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x65, 0x78, 0x74,
	0x72, 0x65, 0x6d, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x79, 0x70, 0x61, 0x67, 0x65, 0x2e,
	0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x79, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x79, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x66, 0x6b, 0x7d, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73,
	0x42, 0x88, 0x01, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x79, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x73, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x63, 0x6f, 0x72, 0x70, 0x2f, 0x65,
	0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x74,
	0x72, 0x65, 0x6d, 0x6f, 0x67, 0x6f, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x65, 0x6d, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6d, 0x79, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f,
	0x76, 0x31, 0x3b, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x88, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_extremo_api_mypage_books_v1_book_service_proto_rawDescOnce sync.Once
	file_extremo_api_mypage_books_v1_book_service_proto_rawDescData []byte
)

func file_extremo_api_mypage_books_v1_book_service_proto_rawDescGZIP() []byte {
	file_extremo_api_mypage_books_v1_book_service_proto_rawDescOnce.Do(func() {
		file_extremo_api_mypage_books_v1_book_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_extremo_api_mypage_books_v1_book_service_proto_rawDesc), len(file_extremo_api_mypage_books_v1_book_service_proto_rawDesc)))
	})
	return file_extremo_api_mypage_books_v1_book_service_proto_rawDescData
}

var file_extremo_api_mypage_books_v1_book_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_extremo_api_mypage_books_v1_book_service_proto_goTypes = []any{
	(*ListBooksRequest)(nil),      // 0: extremo.api.mypage.books.v1.ListBooksRequest
	(*ListBooksResponse)(nil),     // 1: extremo.api.mypage.books.v1.ListBooksResponse
	(*FilterRequest)(nil),         // 2: extremo.api.mypage.books.v1.FilterRequest
	(*FilterResponse)(nil),        // 3: extremo.api.mypage.books.v1.FilterResponse
	(*ListRequest)(nil),           // 4: extremo.api.mypage.books.v1.ListRequest
	(*ListResponse)(nil),          // 5: extremo.api.mypage.books.v1.ListResponse
	(*GetRequest)(nil),            // 6: extremo.api.mypage.books.v1.GetRequest
	(*GetResponse)(nil),           // 7: extremo.api.mypage.books.v1.GetResponse
	(*CreateRequest)(nil),         // 8: extremo.api.mypage.books.v1.CreateRequest
	(*CreateResponse)(nil),        // 9: extremo.api.mypage.books.v1.CreateResponse
	(*UpdateRequest)(nil),         // 10: extremo.api.mypage.books.v1.UpdateRequest
	(*UpdateResponse)(nil),        // 11: extremo.api.mypage.books.v1.UpdateResponse
	(*DeleteRequest)(nil),         // 12: extremo.api.mypage.books.v1.DeleteRequest
	(*v1.Book)(nil),               // 13: extremo.msg.db.v1.Book
	(*timestamppb.Timestamp)(nil), // 14: google.protobuf.Timestamp
	(v1.BookEnum_Status)(0),       // 15: extremo.msg.db.v1.BookEnum.Status
	(*emptypb.Empty)(nil),         // 16: google.protobuf.Empty
}
var file_extremo_api_mypage_books_v1_book_service_proto_depIdxs = []int32{
	13, // 0: extremo.api.mypage.books.v1.ListBooksResponse.elements:type_name -> extremo.msg.db.v1.Book
	13, // 1: extremo.api.mypage.books.v1.FilterResponse.elements:type_name -> extremo.msg.db.v1.Book
	14, // 2: extremo.api.mypage.books.v1.ListRequest.opened_at:type_name -> google.protobuf.Timestamp
	14, // 3: extremo.api.mypage.books.v1.ListRequest.closed_at:type_name -> google.protobuf.Timestamp
	13, // 4: extremo.api.mypage.books.v1.ListResponse.elements:type_name -> extremo.msg.db.v1.Book
	13, // 5: extremo.api.mypage.books.v1.GetResponse.element:type_name -> extremo.msg.db.v1.Book
	14, // 6: extremo.api.mypage.books.v1.CreateRequest.opened_at:type_name -> google.protobuf.Timestamp
	14, // 7: extremo.api.mypage.books.v1.CreateRequest.closed_at:type_name -> google.protobuf.Timestamp
	13, // 8: extremo.api.mypage.books.v1.CreateResponse.element:type_name -> extremo.msg.db.v1.Book
	15, // 9: extremo.api.mypage.books.v1.UpdateRequest.status:type_name -> extremo.msg.db.v1.BookEnum.Status
	14, // 10: extremo.api.mypage.books.v1.UpdateRequest.opened_at:type_name -> google.protobuf.Timestamp
	14, // 11: extremo.api.mypage.books.v1.UpdateRequest.closed_at:type_name -> google.protobuf.Timestamp
	13, // 12: extremo.api.mypage.books.v1.UpdateResponse.element:type_name -> extremo.msg.db.v1.Book
	12, // 13: extremo.api.mypage.books.v1.BookService.Delete:input_type -> extremo.api.mypage.books.v1.DeleteRequest
	6,  // 14: extremo.api.mypage.books.v1.BookService.Get:input_type -> extremo.api.mypage.books.v1.GetRequest
	2,  // 15: extremo.api.mypage.books.v1.BookService.Filter:input_type -> extremo.api.mypage.books.v1.FilterRequest
	4,  // 16: extremo.api.mypage.books.v1.BookService.List:input_type -> extremo.api.mypage.books.v1.ListRequest
	10, // 17: extremo.api.mypage.books.v1.BookService.Update:input_type -> extremo.api.mypage.books.v1.UpdateRequest
	8,  // 18: extremo.api.mypage.books.v1.BookService.Create:input_type -> extremo.api.mypage.books.v1.CreateRequest
	16, // 19: extremo.api.mypage.books.v1.BookService.Delete:output_type -> google.protobuf.Empty
	7,  // 20: extremo.api.mypage.books.v1.BookService.Get:output_type -> extremo.api.mypage.books.v1.GetResponse
	3,  // 21: extremo.api.mypage.books.v1.BookService.Filter:output_type -> extremo.api.mypage.books.v1.FilterResponse
	5,  // 22: extremo.api.mypage.books.v1.BookService.List:output_type -> extremo.api.mypage.books.v1.ListResponse
	11, // 23: extremo.api.mypage.books.v1.BookService.Update:output_type -> extremo.api.mypage.books.v1.UpdateResponse
	9,  // 24: extremo.api.mypage.books.v1.BookService.Create:output_type -> extremo.api.mypage.books.v1.CreateResponse
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_extremo_api_mypage_books_v1_book_service_proto_init() }
func file_extremo_api_mypage_books_v1_book_service_proto_init() {
	if File_extremo_api_mypage_books_v1_book_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_extremo_api_mypage_books_v1_book_service_proto_rawDesc), len(file_extremo_api_mypage_books_v1_book_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_extremo_api_mypage_books_v1_book_service_proto_goTypes,
		DependencyIndexes: file_extremo_api_mypage_books_v1_book_service_proto_depIdxs,
		MessageInfos:      file_extremo_api_mypage_books_v1_book_service_proto_msgTypes,
	}.Build()
	File_extremo_api_mypage_books_v1_book_service_proto = out.File
	file_extremo_api_mypage_books_v1_book_service_proto_goTypes = nil
	file_extremo_api_mypage_books_v1_book_service_proto_depIdxs = nil
}
